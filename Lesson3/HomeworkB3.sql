SELECT soh.SalesOrderID, CompanyName, TotalDue
FROM SalesLT.SalesOrderHeader soh
LEFT JOIN SalesLT.Customer 
ON soh.CustomerID = Customer.CustomerID

SELECT AddressLine1, ISNULL(AddressLine2, 'None'), City, StateProvince, PostalCode, CountryRegion
FROM SalesLT.Address sadd
LEFT JOIN SalesLT.CustomerAddress scus
ON sadd.AddressID = scus.AddressID

/*
You must write a query that returns a list of product name (is generated by the string preceded by the '-' character (example: HL Road Frame) ), only started selling in 2006, Product model name contains "Road", CategoryName contains "Bikes" and  ListPrice value with integer part equal to 2443
*/
SELECT LEFT(p.Name, CHARINDEX('-', p.Name) -1) Name, p.ListPrice, pc.Name
FROM SalesLT.Product p
JOIN SalesLT.ProductCategory pc
ON p.ProductCategoryID = pc.ProductCategoryID
JOIN SalesLT.ProductModel pm
ON p.ProductModelID = pm.ProductModelID
WHERE p.ListPrice LIKE '2443%' 
AND p.SellStartDate BETWEEN '2006-01-01' AND '2006-12-31' 
AND pc.Name LIKE '%Bikes%' 
AND pm.Name LIKE '%Road%'

SELECT customer_id, transaction_id, ds.scenario_id, transaction_type
       , sub_category, category 
FROM dbo.fact_transaction_2019 ft19
JOIN dbo.dim_scenario ds
ON  ft19.scenario_id = ds.scenario_id
WHERE MONTH (transaction_time) = 1 -- AND YEAR (transaction_time) = 2019 (mỗi bảng fact chỉ lưu dữ liệu của 1 năm duy nhất)
AND transaction_type != 'Payment'

SELECT customer_id, transaction_id, ds.scenario_id, transaction_type
       , sub_category, category, payment_method
FROM dbo.fact_transaction_2019 ft19
JOIN dbo.dim_scenario ds
ON  ft19.scenario_id = ds.scenario_id
JOIN dbo.dim_payment_channel dpc
ON ft19.payment_channel_id = dpc.payment_channel_id
WHERE MONTH (transaction_time) >= 1 AND MONTH (transaction_time) <= 6 
AND category = 'Shopping' AND payment_method = 'Bank account'

-- Lesson3 OPTIONAL 
/*
Retrieve a report that includes the following information: customer_id, transaction_id, scenario_id, transaction_type, category, payment_method. These transactions must meet the following conditions: 
●	Were created from Jan to June 2019
●	Had category type is shopping
●	Were paid by Bank account
*/

SELECT customer_id, transaction_id, ds.scenario_id 
       , payment_method, payment_platform
FROM dbo.fact_transaction_2019 ft19
JOIN dbo.dim_scenario ds
ON  ft19.scenario_id = ds.scenario_id
JOIN dbo.dim_payment_channel dpc
ON ft19.payment_channel_id = dpc.payment_channel_id
JOIN dbo.dim_platform dp
ON ft19.platform_id = dp.platform_id
WHERE MONTH (transaction_time) = 1 -- AND YEAR (transaction_time) = 2019 (ko cần thiết vì mỗi bảng fact chỉ lưu dữ liệu của 1 năm duy nhất)
AND payment_platform = 'android'
UNION ALL
SELECT customer_id, transaction_id, ds.scenario_id 
       , payment_method, payment_platform
FROM dbo.fact_transaction_2020 ft20
JOIN dbo.dim_scenario ds
ON  ft20.scenario_id = ds.scenario_id
JOIN dbo.dim_payment_channel dpc
ON ft20.payment_channel_id = dpc.payment_channel_id
JOIN dbo.dim_platform dp
ON ft20.platform_id = dp.platform_id
WHERE MONTH (transaction_time) = 1 -- AND YEAR (transaction_time) = 2020 (ko cần thiết vì mỗi bảng fact chỉ lưu dữ liệu của 1 năm duy nhất)
AND payment_platform = 'android'

---> results 30,911 rows

/*
Hãy tìm các giao dịch trong năm 2020 không áp dụng những ưu đãi của nhóm khách hàng đã từng giao dịch vào tháng 01/2019 được hưởng chương trình khuyến mãi với hoá đơn thanh toán thuộc loại tiền điện. 
Thông tin hiển thị bao gồm: transaction_id, customer_id, scenario_id, sub_category, charged_amount, thời gian giao dịch theo định dạng YYYY.MM.DD sắp xếp kết quả theo mã khách hàng tăng dần
*/
SELECT *
FROM fact_transaction_2020
WHERE promotion_id = '0'
AND customer_id IN ( SELECT DISTINCT customer_id
FROM fact_transaction_2019 AS fact_19
JOIN dim_scenario AS scena
ON fact_19.scenario_id = scena.scenario_id
WHERE promotion_id <> '0'
AND sub_category = 'electricity'
AND MONTH (transaction_time) = 1)

/*
 Hiển thị thông tin: customer_id, transaction_id, scenario_id, payment_method and payment_platform. Những giao dịch này thoả mãn các điều kiện sau: (Hard)
Bao gồm tất cả giao dịch của nhóm khách hàng thực hiện trong tháng 1/2019 thanh toán bằng nền tảng android và cộng thêm tất cả giao dịch của nhóm khách hàng này trong năm 1/2020 
*/
WITH fact19 AS (
       SELECT customer_id, transaction_id, ds.scenario_id 
       , payment_method, payment_platform
       FROM dbo.fact_transaction_2019 ft19
       JOIN dbo.dim_scenario ds
       ON  ft19.scenario_id = ds.scenario_id
       JOIN dbo.dim_payment_channel dpc
       ON ft19.payment_channel_id = dpc.payment_channel_id
       JOIN dbo.dim_platform dp
       ON ft19.platform_id = dp.platform_id
       WHERE MONTH (transaction_time) = 1
       AND payment_platform = 'android'
), 
       fact20 AS (
       SELECT customer_id, transaction_id, ds.scenario_id 
       , payment_method, payment_platform
       FROM dbo.fact_transaction_2020 ft20
       JOIN dbo.dim_scenario ds
       ON  ft20.scenario_id = ds.scenario_id
       JOIN dbo.dim_payment_channel dpc
       ON ft20.payment_channel_id = dpc.payment_channel_id
       JOIN dbo.dim_platform dp
       ON ft20.platform_id = dp.platform_id
       WHERE MONTH (transaction_time) = 1
       AND payment_platform = 'android')

SELECT * FROM fact19
UNION ALL
SELECT * FROM fact20
WHERE customer_id IN (SELECT customer_id FROM fact19)
-- results 13,174 rows

SELECT ft19.transaction_id, customer_id, charged_amount, DATEPART(WEEK, transaction_time) weeks, status_description
FROM dbo.fact_transaction_2019 ft19
LEFT JOIN dbo.dim_status ds
ON ft19.status_id = ds.status_id
LEFT JOIN dbo.dim_scenario dsc
ON ft19.scenario_id = dsc.scenario_id
WHERE transaction_type = 'Payment' AND ds.status_id = -14

-- results 201 rows

-- Từ dữ liệu phía trên tính số lượng khách hàng thuộc diện này của mỗi tuần 
SELECT DATEPART(WEEK, transaction_time) weeks, COUNT(DISTINCT customer_id) customers
FROM dbo.fact_transaction_2019 ft19
LEFT JOIN dbo.dim_status ds
ON ft19.status_id = ds.status_id
LEFT JOIN dbo.dim_scenario dsc
ON ft19.scenario_id = dsc.scenario_id
WHERE transaction_type = 'Payment' AND ds.status_id = -14
GROUP BY DATEPART(WEEK, transaction_time)
ORDER BY 2 DESC

-- Tương tự hãy tính tổng số tiền ước tính giao dịch của mỗi khách hàng đó trong mỗi tuần
SELECT DATEPART(WEEK, transaction_time) weeks, SUM(charged_amount) total_amount
FROM dbo.fact_transaction_2019 ft19
LEFT JOIN dbo.dim_status ds
ON ft19.status_id = ds.status_id
LEFT JOIN dbo.dim_scenario dsc
ON ft19.scenario_id = dsc.scenario_id
WHERE transaction_type = 'Payment' AND ds.status_id = -14
GROUP BY DATEPART(WEEK, transaction_time)
ORDER BY 2 DESC

